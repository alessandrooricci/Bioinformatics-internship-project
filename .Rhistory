View(group_2)
View(group_3)
View(group_4)
colSums(is.na(group_1, group_2,group_3,group_4))
NA_values_per_groups <- rowSums(group_1)
NA_values_per_groups
NA_values_per_groups <- rowSums(group_1, group_2, group_3, group_4)
NA_values_per_groups <- rowSums(is.na(proteomics_excercises[, 2:4]))
NA_values_per_groups
NA_values_per_groups <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
NA_values_per_groups
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
View(NA_values_per_group_1)
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
NA_values_per_group_3 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
NA_values_per_group_4 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
#fulljoin()
proteomics_clean <- full_join(NA_values_per_group_1,NA_values_per_group_2,NA_values_per_group_3,NA_values_per_group_4)
#fulljoin()
proteomics_clean <- full_join(NA_values_per_group_1,NA_values_per_group_2)
#fulljoin()
proteomics_half_clean <- full_join(NA_values_per_group_1,NA_values_per_group_2)
#fulljoin()
proteomics_half_clean1 <- full_join(NA_values_per_group_1,NA_values_per_group_2)
View(proteomics_half_clean1)
View(NA_values_per_group_1)
View(one_or_none_rows)
View(clean_rows)
View(NA_values_per_group_1)
View(NA_values_per_group_1)
View(group_1)
left_join(proteomics_excercises, NA_values_per_group_1)
left_join(NA_values_per_group_1,proteomics_excercises)
cross_join(NA_values_per_group_1,proteomics_excercises)
gene_names <- proteomics_excercises$Genes
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4]))) %>%
rownames(gene_names)
NA_values_per_group_1
gene_names <- as.tibble(proteomics_excercises$Genes)
View(gene_names)
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
NA_values_per_group_1 <- left_join(gene_names, NA_values_per_group_1)
View(NA_values_per_group_1)
View(gene_names)
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))%>%
colnames(NA_values)
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))%>%
colnames(NA_values)
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))%>%
colnames(NA_values)
# Find NA values in each group/condition
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("values")
View(NA_values_per_group_1)
NA_values_per_group_1 <- merge(gene_names, NA_values_per_group_1 )
View(NA_values_per_group_1)
NA_values_per_group_1 <- merge(gene_names, NA_values_per_group_1 )
NA_values_per_group_1 <- left_join( NA_values_per_group_1,gene_names)
View(NA_values_per_group_1)
NA_values_per_group_2 <- left_join(NA_values_per_group_2,gene_names)
colnames(NA_values_per_group_1) <- c("values")
## Join tibble with their NA values
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("values")
NA_values_per_group_1 <- left_join(NA_values_per_group_1,gene_names)
colnames(NA_values_per_group_1) <- c("NA_group_1")
colnames(gene_names) <- c("Genes")
## Join tibble with their NA values
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("NA_group_1")
NA_values_per_group_1 <- left_join(NA_values_per_group_1,gene_names)
source("0.libraries.R")
source("./script/0.libraries.R")
# Load proteomics df
proteomics_excercises <- read_tsv("../data/proteomics_clean.tsv")
# Load proteomics df
proteomics_excercises <- read_tsv("./data/proteomics_clean.tsv")
View(proteomics_excercises)
# Find total NA values in df
NA_values <- sum(is.na(proteomics_excercises))
# NA in each column
NA_values_col <- colSums(is.na(proteomics_excercises))
# NA in each row
NA_values_row <- rowSums(is.na(proteomics_excercises))
# Rows with no NA values
clean_rows <- proteomics_excercises[complete.cases(proteomics_excercises), ]
complete.cases(proteomics_excercises)
View(clean_rows)
# Rows with one or none NA values
one_or_none_rows <- proteomics_excercises %>%
filter(rowSums(is.na(proteomics_excercises)) <= 1)
View(one_or_none_rows)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes)
View(gene_names)
colnames(gene_names) <- c("Genes")
## Join tibble with their NA values
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("NA_group_1")
View(NA_values_per_group_1)
NA_values_per_group_1 <- left_join(NA_values_per_group_1,gene_names) #provare con un altro tipo di join o merge()
NA_values_per_group_1 <- bind_cols(NA_values_per_group_1,gene_names) #provare con un altro tipo di join o merge()
View(NA_values_per_group_1)
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
colnames(NA_values_per_group_1) <- c("NA_group_2")
NA_values_per_group_2 <- bind_cols(NA_values_per_group_2,gene_names)
NA_values_per_group_3 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
colnames(NA_values_per_group_1) <- c("NA_group_3")
NA_values_per_group_3 <- bind_cols(NA_values_per_group_3,gene_names)
NA_values_per_group_4 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
colnames(NA_values_per_group_1) <- c("NA_group_4")
NA_values_per_group_4 <- bind_cols(NA_values_per_group_4,gene_names)
View(NA_values_per_group_2)
View(NA_values_per_group_3)
View(NA_values_per_group_4)
colnames(NA_values_per_group_1) <- c("NA_group_1")
colnames(NA_values_per_group_2) <- c("NA_group_2")
colnames(NA_values_per_group_3) <- c("NA_group_3")
colnames(NA_values_per_group_4) <- c("NA_group_4")
colnames(gene_names) <- c("Genes")
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes)
colnames(gene_names) <- c("Genes")
NA_values_per_group_1 <- bind_cols(NA_values_per_group_1,gene_names) #provare con un altro tipo di join o merge()
NA_values_per_group_2 <- bind_cols(NA_values_per_group_2,gene_names)
NA_values_per_group_3 <- bind_cols(NA_values_per_group_3,gene_names)
NA_values_per_group_4 <- bind_cols(NA_values_per_group_4,gene_names)
NA_values_per_group_1 <- bind_cols(NA_values_per_group_1,-gene_names) #provare con un altro tipo di join o merge()
NA_values_per_group_1$...2 <- NULL
NA_values_per_group_2$...2 <- NULL
NA_values_per_group_2$...2 <- NULL
NA_values_per_group_4$...2 <- NULL
NA_values_per_group_3$...2 <- NULL
NA_values_per_group <- bind_cols(NA_values_per_group_1,gene_names)
View(NA_values_per_group)
NA_values_per_group <- bind_cols(NA_values_per_group_2,gene_names)
# Load proteomics df
proteomics_excercises <- read_tsv("./data/proteomics_clean.tsv")
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes)
View(gene_names)
colnames(gene_names) <- c("Genes")
## Join tibbles with their NA values
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
View(NA_values_per_group_1)
colnames(NA_values_per_group_1) <- c("NA_group_1")
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
colnames(NA_values_per_group_2) <- c("NA_group_2")
NA_values_per_group_3 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
colnames(NA_values_per_group_3) <- c("NA_group_3")
NA_values_per_group_4 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
colnames(NA_values_per_group_4) <- c("NA_group_4")
NA_table <- cbind(gene_names, NA_values_per_group_1, NA_values_per_group_2,
NA_values_per_group_3, NA_values_per_group_4)
View(NA_table)
proteomics_filtered <- subset(NA_table, !is.na("NA_group_1") + !is.na("NA_group_2") + !is.na("NA_group_3") + !is.na("NA_group_3") >= 2)
View(proteomics_filtered)
proteomics_filtered <- NA_table %>%
filter(rowSums(is.na(NA_table)) <= 1)
View(proteomics_filtered)
proteomics_filtered <- proteomics_excercises %>%
filter(rowSums(is.na(proteomics_excercises)) <= 1)
rowSums(is.na(proteomics_excercises))
rowSums(is.na(proteomics_filtered))
if (try > 2) {
print(try)
}
try <- as.matrix(rowSums(is.na(proteomics_excercises)))
if (try > 2) {
print(try)
}
if (any(try > 2)) {
print(try[try > 2])
} else {
print("No row sums greater than 2.")
}
if (any(try > 2)) {
print(try[try < 2])
} else {
print("No row sums greater than 2.")
}
proteomics_filtered <- proteomics_excercises %>%
filter(rowSums(is.na(proteomics_excercises)) <= 1)
which(proteomics_filtered <= 4)
View(NA_table)
rowSums(NA_table)
rowSums(NA_table$NA_group_1, NA_table$NA_group_2, NA_table$NA_group_3, NA_table$NA_group_4)
rowSums(NA_table[,"NA_group_1","NA_group_2","NA_group_3","NA_group_4")
rowSums(NA_table[,"NA_group_1","NA_group_2","NA_group_3","NA_group_4"])
proteomics_filtered <- NA_table %>%
filter(rowSums(NA_table[ ,"NA_group_1","NA_group_2","NA_group_3","NA_group_4"]))
rowSums(NA_table[c(,"NA_group_1","NA_group_2","NA_group_3","NA_group_4")])
rowSums(NA_table[c( ,"NA_group_1","NA_group_2","NA_group_3","NA_group_4")])
rowSums(NA_table[c("NA_group_1","NA_group_2","NA_group_3","NA_group_4")])
rowSums(is.na(NA_table[c("NA_group_1","NA_group_2","NA_group_3","NA_group_4")])) <= 10)
rowSums(is.na(NA_table[c("NA_group_1","NA_group_2","NA_group_3","NA_group_4")])<= 10)
getOption("max.print")
rowSums(is.na(NA_table[c("NA_group_1","NA_group_2","NA_group_3","NA_group_4")]) >= 10)
proteomics_filtered <- NA_table %>%
filter(rowSums(is.na(NA_table[c("NA_group_1","NA_group_2","NA_group_3","NA_group_4")]) >= 10))
proteomics_filtered <- NA_table %>%
filter(rowSums(as.vector(is.na(NA_table[c("NA_group_1","NA_group_2",
"NA_group_3","NA_group_4")]) >= 10)))
proteomics_filtered <- NA_table %>%
filter(rowSums(as.vector(is.na(NA_table[c("NA_group_1","NA_group_2",
"NA_group_3","NA_group_4")] >= 10 ))))
proteomics_filtered <- NA_table %>%
filter(rowSums(as.vector(is.na(NA_table[c("NA_group_1","NA_group_2",
"NA_group_3","NA_group_4")] >= 10 ))))
NA_table_filtered <- NA_table %>%
filter(rowSums(select(2:4)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(select(c(2:4))) <= 10)
filter(rowSums(select(-Genes) <= 10)
NA_table_filtered <- NA_table %>%
NA_table_filtered <- NA_table %>%
filter(rowSums(select(-Genes)) <= 10))
NA_table_filtered <- NA_table %>%
filter(rowSums(select(-Genes)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(select( ,-Genes)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_table) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(as.matrix(NA_table)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(as.integer(NA_table)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(select(., -Genes)) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(select(NA_table, -Genes)) <= 10)
NA_table_filtered <- NA_table %>%
column_to_rownames("Genes") %>%
filter(rowSums(NA_table) <= 10)
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
View(NA_table_filtered)
NA_table_filtered <- NA_matrix %>%
filter(rowSums(NA_matrix) <= 10)
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
read_tsv("./data/dataset_cml_UnID.tsv")
dataset_cml_UNID <- read_tsv("./data/dataset_cml_UnID.tsv")
View(dataset_cml_UNID)
proteomics_excercises <- read_tsv("./data/dataset_cml_UnID.tsv") %>%
relocate("UNIPROT")
View(proteomics_excercises)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes, proteomics_excercises$UNIPROT)
View(gene_names)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes, proteomics_excercises$UNIPROT)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes & proteomics_excercises$UNIPROT)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- as.tibble(proteomics_excercises$Genes, proteomics_excercises$UNIPROT)
# Find NA values in each group/condition
## Creating a tibble with gene names
gene_names <- data.frame(Genes = proteomics_excercises$Genes,
UNIPROT = proteomics_excercises$UNIPROT)
View(gene_names)
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("NA_group_1")
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
colnames(NA_values_per_group_2) <- c("NA_group_2")
NA_values_per_group_3 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
colnames(NA_values_per_group_3) <- c("NA_group_3")
NA_values_per_group_4 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
colnames(NA_values_per_group_4) <- c("NA_group_4")
### Join tibbles to create a unique table
NA_table <- cbind(gene_names, NA_values_per_group_1, NA_values_per_group_2,
NA_values_per_group_3, NA_values_per_group_4)
View(NA_matrix)
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
View(NA_matrix)
NA_matrix <- NA_table %>%
column_to_rownames("Genes", "UNIPROT")
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
NA_matrix1 <- NA_table %>%
column_to_rownames("Genes")
NA_matrix2 <- NA_matrix1 %>%
column_to_rownames("UNIPROT")
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
View(NA_table)
# Find NA values in each group/condition
## Creating a tibble with gene names and UNIPROT ID
gene_names_UNID <- data.frame(Genes = proteomics_excercises$Genes,
UNIPROT = proteomics_excercises$UNIPROT)
View(gene_names_UNID)
only_gene <- (proteomics_excercises$Genes)
only_gene <- as.tibble(proteomics_excercises$Genes)
View(only_gene)
colnames(only_gene) <- c("Genes")
# Join tibbles to create a unique table
NA_table <- cbind(only_gene, NA_values_per_group_1, NA_values_per_group_2,
NA_values_per_group_3, NA_values_per_group_4)
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
NA_table_filtered <- NA_table %>%
filter(rowSums(NA_matrix) <= 10)
View(NA_table_filtered)
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
NA_table_filtered <- NA_matrix %>%
filter(rowSums(NA_matrix) <= 10)
View(NA_table_filtered)
rownames_to_column(NA_table_filtered, "Genes")
NA_table_filtered <- rownames_to_column(NA_table_filtered, "Genes")
semi_join(NA_table_filtered, proteomics_excercises, by = "Genes")
View(proteomics_filtered)
proteomics_filtered <- semi_join(NA_table_filtered, proteomics_excercises, by = "Genes")
proteomics_filtered <- semi_join(proteomics_excercises,NA_table_filtered , by = "Genes")
write_tsv(proteomics_filtered, "./data/dataset_cml_filtered.tsv")
View(NA_values_per_group_1)
## Join tibbles with their NA values
### Create tibbles and change names
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, "^R_Ctrl_"])))
## Join tibbles with their NA values
### Create tibbles and change names
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, grep("^R_Ctrl_", names(dati))])))
## Join tibbles with their NA values
### Create tibbles and change names
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, grep(pattern = "^R_Ctrl_", names(proteomics_excercises))])))
source("./script/0.libraries.R")
View(try)
View(try)
View(try)
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
View(NA_values_per_group_1)
colnames(NA_values_per_group_1) <- c("NA_group_1")
prova <- as.tibble(rowSums(is.na(str_detect("R_Ctrl"))))
colnames(NA_values_per_group_1) <- c("NA_group_1")
prova <- as.tibble(rowSums(is.na(str_detect("R_Ctrl"))))
colnames(prova) <- c("NA_group_1")
prova <- as.tibble(rowSums(is.na(str_detect("R_Ctrl"))))
prova <- as.tibble(rowSums(is.na(str_detect(pattern = "R_Ctrl"))))
prova <- as.tibble(rowSums(is.na(str_detect(pattern = "R_Ctrl"))))
View(proteomics_excercises)
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("NA_group_1")
prova <- as.tibble(rowSums(is.na(str_detect(proteomics_excercises, pattern = "R_Ctrl"))))
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(clusterProfiler)
library(AnnotationDbi)
library(org.Hs.eg.db)
source("0.libraries.R")
source("0.libraries.R")
dataset_cml <- read_tsv("data/report.unique_genes_matrix.tsv")
View(dataset_cml)
proteomics_excercises <- read_tsv("./data/dataset_cml_UnID.tsv") %>%
relocate("UNIPROT")
View(proteomics_excercises)
g<ene_names_UNID <- data.frame(Genes = proteomics_excercises$Genes,
UNIPROT = proteomics_excercises$UNIPROT)
gene_names_UNID <- data.frame(Genes = proteomics_excercises$Genes,
UNIPROT = proteomics_excercises$UNIPROT)
only_gene <- as.tibble(proteomics_excercises$Genes)
colnames(only_gene) <- c("Genes")
View(only_gene)
View(gene_names_UNID)
NA_values_per_group_1 <- as.tibble(rowSums(is.na(proteomics_excercises[, 2:4])))
colnames(NA_values_per_group_1) <- c("NA_group_1")
View(NA_values_per_group_1)
NA_values_per_group_2 <- as.tibble(rowSums(is.na(proteomics_excercises[, 5:7])))
colnames(NA_values_per_group_2) <- c("NA_group_2")
NA_values_per_group_3 <- as.tibble(rowSums(is.na(proteomics_excercises[, 8:10])))
colnames(NA_values_per_group_3) <- c("NA_group_3")
NA_values_per_group_4 <- as.tibble(rowSums(is.na(proteomics_excercises[, 11:13])))
colnames(NA_values_per_group_4) <- c("NA_group_4")
colnames(NA_values_per_group_4) <- c("NA_group_4")
View(NA_values_per_group_1)
View(NA_values_per_group_2)
View(NA_values_per_group_3)
View(NA_values_per_group_4)
# Join tibbles to create a unique table
NA_table <- cbind(only_gene, NA_values_per_group_1, NA_values_per_group_2,
NA_values_per_group_3, NA_values_per_group_4)
View(NA_table)
# Turn 'Genes' column to row and create a new variable
NA_matrix <- NA_table %>%
column_to_rownames("Genes")
View(NA_matrix)
# Using filter() to filter genes of interest
NA_table_filtered <- NA_matrix %>%
filter(rowSums(NA_matrix) <= 10)
# Opposite to line 47
NA_table_filtered <- rownames_to_column(NA_table_filtered, "Genes")
View(NA_table_filtered)
proteomics_filtered <- semi_join(proteomics_excercises,NA_table_filtered , by = "Genes")
View(proteomics_filtered)
View(proteomics_filtered)
View(proteomics_excercises)
View(proteomics_excercises)
View(proteomics_excercises)
View(proteomics_filtered)
R_Ctrl_1 <- proteomics_excercises %>%
select(c(1:5))
R_Ctrl_1 <- proteomics_excercises %>%
select(1:5)
help("select")
R_Ctrl_1 <- proteomics_excercises %>%
select([c(1:5)])
R_Ctrl_1 <- proteomics_excercises %>%
select(proteomics_excercises, 1:5)
R_Ctrl_1 <- proteomics_excercises %>%
select(num_range(1:5))
R_Ctrl_1 <- proteomics_excercises %>%
select(1:5)
R_Ctrl_1 <- proteomics_excercises %>%
dplyr::select(1:5)
View(R_Ctrl_1)
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5)
View(R_Ctrl)
R_Ima <- proteomics_excercises %>%
dplyr::select(c(1,2,6,7,8))
View(R_Ima)
S_Ctrl <- proteomics_excercises %>%
dplyr::select(c(1,2,9,10,11))
View(S_Ctrl)
S_Ima <- proteomics_excercises %>%
dplyr::select(c(1,2,12,13,14))
View(S_Ima)
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate("Flag_1")
View(R_Ctrl)
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate(Flag_1)
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate("Flag_1")
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate(flag = ifelse(rowSums(!is.na(.)) >= 2, TRUE, FALSE))
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate(flag = ifelse(rowSums(!is.na(.)) <= 2, TRUE, FALSE))
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5) %>%
dplyr::mutate(flag = ifelse(rowSums(!is.na(.)) >= 2, TRUE, FALSE))
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl) >= 2)
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl) >= 2)
R_Ctrl <- proteomics_excercises %>%
dplyr::select(1:5)
View(R_Ctrl)
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl) >= 2)
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl)) >= 2
R_Ctrl$flag1 <- ifelse(rowSums(!is.na(R_Ctrl)) >= 2, TRUE, FALSE)
help("ifelse")
R_Ctrl <- proteomics_excercises[,1:3]
R_Ctrl <- proteomics_excercises[,1:5]
R_Ctrl <- proteomics_excercises[,3:5]
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl)) >= 2
R_Ctrl <- proteomics_excercises[,3:5]
R_Ctrl$flag1 <- rowSums(!is.na(R_Ctrl)) >= 2
R_Ima <- proteomics_excercises[,6:8]
R_Ima$flag2 <- rowSums(!is.na(R_Ima)) >= 2
S_Ctrl <- proteomics_excercises[,9:11]
S_Ctrl$flag3 <- rowSums(!is.na(S_Ctrl)) >= 2
S_Ima <- proteomics_excercises[,12:14]
S_Ima$flag4 <- rowSums(!is.na(S_Ima)) >= 2
output <- cbind(R_Ctrl,R_Ima,S_Ctrl,S_Ima)
View(output)
output <- cbind(proteomics_excercises[,1:2],R_Ctrl,R_Ima,S_Ctrl,S_Ima)
output <- output[rowSums(output[, c("flag1", "flag2", "flag3", "flag4")]) >= 1, ]
output <- output %>%
select(-flag1, -flag2, -flag3, -flag4)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(clusterProfiler)
library(AnnotationDbi)
library(org.Hs.eg.db)
output <- output %>%
dplyr::select(-flag1, -flag2, -flag3, -flag4)
library(dplyr)
output <- output %>%
select(-flag1, -flag2, -flag3, -flag4)
output <- output %>%
dplyr::select(-flag1, -flag2, -flag3, -flag4)
